name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      commit_message: ${{ steps.get_commit_message.outputs.commit_message }}
    strategy:
      matrix:
        os: [ubuntu-24.04-arm, macos-latest]
        include:
          - os: ubuntu-24.04-arm
            build_script: build:executable:linux
            artifact_name: station-cli-linux-arm64
          - os: macos-latest
            build_script: build:executable:macos
            artifact_name: station-cli-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        if: matrix.os == 'ubuntu-24.04-arm'
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        if: matrix.os == 'ubuntu-24.04-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y make g++ git
          npm ci

      - name: Build executable
        run: npm run ${{ matrix.build_script }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: executables/${{ matrix.artifact_name }}
          if-no-files-found: error

      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Get commit message
        id: get_commit_message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "commit_message<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Move artifacts to root directory
        run: |
          # List contents to debug
          ls -la station-cli-linux-arm64/
          ls -la station-cli-macos-arm64/
          
          # Find and move the actual executable files
          find station-cli-linux-arm64 -type f -exec mv {} ./station-cli-linux-arm64 \;
          find station-cli-macos-arm64 -type f -exec mv {} ./station-cli-macos-arm64 \;
          
          # Clean up directories
          rm -rf station-cli-linux-arm64 station-cli-macos-arm64
          
          # Make executables executable
          chmod +x station-cli-linux-arm64 station-cli-macos-arm64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ needs.build.outputs.version }}
          body: |
            ## What's Changed
            
            ${{ needs.build.outputs.commit_message }}
            
            ## Downloads
            
            ### Linux ARM64
            - [station-cli-linux-arm64](https://github.com/${{ github.repository }}/releases/download/v${{ needs.build.outputs.version }}/station-cli-linux-arm64)
            
            ### macOS
            - [station-cli-macos-arm64](https://github.com/${{ github.repository }}/releases/download/v${{ needs.build.outputs.version }}/station-cli-macos-arm64)
          draft: false
          prerelease: false
          files: |
            station-cli-linux-arm64
            station-cli-macos-arm64
          tag_name: v${{ needs.build.outputs.version }} 